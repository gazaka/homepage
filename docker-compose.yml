services:
  web:
    build: .
    ports:
      - "2525:80"
    volumes:
      - ./src:/usr/share/nginx/html
    # We connect this service to our new, dedicated network
    networks:
      - web-network # Changed from t3_proxy
    labels:
      - "traefik.enable=true"
      # We tell Traefik to look for this container on our new network
      - "traefik.docker.network=web-network" # Changed from t3_proxy

      # --- All your other labels remain the same ---
      - "traefik.http.routers.my-website-http.rule=Host(`gazaka.com`)"
      - "traefik.http.routers.my-website-http.entrypoints=web"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.my-website-http.middlewares=https-redirect"
      - "traefik.http.routers.my-website-https.rule=Host(`gazaka.com`)"
      - "traefik.http.routers.my-website-https.entrypoints=websecure"
      - "traefik.http.routers.my-website-https.tls=true"
      - "traefik.http.routers.my-website-https.tls.certresolver=myresolver"
      - "traefik.http.services.my-website.loadbalancer.server.port=80"
    depends_on:
      - proxy

  proxy:
    build:
      context: ./proxy
    env_file:
      - .env
    # The proxy also joins the same network
    networks:
      - web-network # Changed from t3_proxy

# We are now CREATING this network, so 'external: true' is removed.
networks:
  web-network: # Changed from t3_proxy
    name: web-network # Give it a clear, predictable name